name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out

    - name: Build
      run: go build -o mock_cors_server ./cmd/server

    - name: Install test dependencies
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Make test script executable
      run: chmod +x test_e2e.sh

    - name: Run end-to-end tests
      run: |
        # Build binary in correct location for test script
        mkdir -p bin
        go build -o bin/mock_cors_server ./cmd/server

        # Run the proper E2E test script
        ./test_e2e.sh

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.23

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o mock_cors_server-linux-amd64 ./cmd/server
        GOOS=darwin GOARCH=amd64 go build -o mock_cors_server-darwin-amd64 ./cmd/server
        GOOS=darwin GOARCH=arm64 go build -o mock_cors_server-darwin-arm64 ./cmd/server
        GOOS=windows GOARCH=amd64 go build -o mock_cors_server-windows-amd64.exe ./cmd/server

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: mock_cors_server-*
